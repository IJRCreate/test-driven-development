name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MOZ_HEADLESS: "1"

jobs:

  testing:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Unit Tests
      working-directory: src
      run: |
        python manage.py test lists
    - name: Run Functional Tests
      working-directory: src
      run: |
        apt update -y && apt install -y firefox-esr
        pip install selenium
        python manage.py test functional_tests
    - name: Archive Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screendumps
        path: src/functional_tests/screendumps/
  
  deploy-staging:
    needs: testing
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13]
    steps: 
    - name: Setup SSH 
      run: |
       ssh-agent -s
       mkdir -p /home/runner/.ssh/
       touch /home/runner/.ssh/id_ed25519
       echo -e "${{secrets.SSH_KEY}}" > /home/runner/.ssh/id_ed25519
       chmod 700 /home/runner/.ssh/id_ed25519
       ssh-keyscan -t rsa,dsa,ecdsa,ed25519 ${{secrets.STAGING_HOST}} >> /home/runner/.ssh/known_hosts
       sudo systemctl start ssh.service
    - name: Run ansible script
      run: |
        ansible-playbook -vvv --private-key /home/runner/.ssh/id_rsa --user=${{secrets.ANSIBLE_USER}} -i ${{secrets.STAGING_HOST}}, ${{ github.workspace }}/infra/deploy-playbook.yaml
   